\contentsline {chapter}{List of Figures}{vi}
\contentsline {chapter}{List of Tables}{vii}
\contentsline {chapter}{Abstract}{viii}
\contentsline {chapter}{Acknowledgments}{ix}
\contentsline {chapter}{\numberline {1}Introduction}{1}
\contentsline {chapter}{\numberline {2}Information Flow}{3}
\contentsline {section}{\numberline {2.1}Noninterference}{3}
\contentsline {subsection}{\numberline {2.1.1}Direct and Indirect Flows}{3}
\contentsline {subsection}{\numberline {2.1.2}Security Conditions}{3}
\contentsline {subsection}{\numberline {2.1.3}Declassification}{4}
\contentsline {section}{\numberline {2.2}Information Flow in Multithreaded Programs}{4}
\contentsline {subsection}{\numberline {2.2.1}Noninterference in Multithreaded Programs}{4}
\contentsline {subsection}{\numberline {2.2.2}Existing Approaches}{5}
\contentsline {section}{\numberline {2.3}Definition of Terms}{6}
\contentsline {paragraph}{FlowHaskell}{6}
\contentsline {paragraph}{FlowHaskellRef}{6}
\contentsline {paragraph}{Information-flow policies}{6}
\contentsline {section}{\numberline {2.4}Problem Statement}{6}
\contentsline {chapter}{\numberline {3}Encoding Information Flow in Haskell}{7}
\contentsline {section}{\numberline {3.1}The Arrows Interface}{7}
\contentsline {section}{\numberline {3.2}FlowHaskell}{8}
\contentsline {subsection}{\numberline {3.2.1}Security Lattice}{8}
\contentsline {subsection}{\numberline {3.2.2}Programming in FlowHaskell}{8}
\contentsline {subsection}{\numberline {3.2.3}FlowArrow}{10}
\contentsline {subsection}{\numberline {3.2.4}Tagging Security Label}{11}
\contentsline {subsection}{\numberline {3.2.5}Declassification}{11}
\contentsline {subsection}{\numberline {3.2.6}Policy Enforcement}{12}
\contentsline {chapter}{\numberline {4}Extending FlowHaskell with Reference Manipulation}{13}
\contentsline {section}{\numberline {4.1}Refinement of Security Types}{13}
\contentsline {section}{\numberline {4.2}Programming in FlowHaskellRef}{15}
\contentsline {section}{\numberline {4.3}Defining a New Arrow}{16}
\contentsline {subsection}{\numberline {4.3.1}Arrows Computation}{16}
\contentsline {subsection}{\numberline {4.3.2}Type System}{16}
\contentsline {section}{\numberline {4.4}Pure Problem}{22}
\contentsline {section}{\numberline {4.5}Combinator $\mathtt {lowerA}$}{22}
\contentsline {subsection}{\numberline {4.5.1}Input Filtering Mechanism}{23}
\contentsline {subsection}{\numberline {4.5.2}Output Security Type Derivation}{23}
\contentsline {section}{\numberline {4.6}References and Combinator $\mathtt {lowerA}$}{24}
\contentsline {subsection}{\numberline {4.6.1}Filtering References}{24}
\contentsline {subsection}{\numberline {4.6.2}Preserving Subtyping Invariants}{25}
\contentsline {subsubsection}{Singleton Types for Lattice}{26}
\contentsline {subsubsection}{Singleton Types for $\mathtt {SecType}$}{26}
\contentsline {paragraph}{}{27}
\contentsline {section}{\numberline {4.7}Reference Manipulation}{27}
\contentsline {chapter}{\numberline {5}Adding Unification Inside of FlowHaskellRef }{29}
\contentsline {section}{\numberline {5.1}Unification}{29}
\contentsline {subsection}{\numberline {5.1.1}Unification Types}{30}
\contentsline {subsection}{\numberline {5.1.2}Unification in FlowArrowRef}{31}
\contentsline {subsection}{\numberline {5.1.3}Defining New Primitives}{35}
\contentsline {section}{\numberline {5.2}Implementation of $\mathtt {lowerA}$}{35}
\contentsline {chapter}{\numberline {6}Case Study of FlowHaskellRef}{37}
\contentsline {section}{\numberline {6.1}Cryptographic Protocol}{37}
\contentsline {subsection}{\numberline {6.1.1}Protocols}{37}
\contentsline {subsection}{\numberline {6.1.2}Cryptographic Library}{38}
\contentsline {section}{\numberline {6.2}Implementation in FlowHaskellRef}{38}
\contentsline {subsection}{\numberline {6.2.1}Bank Lattice}{38}
\contentsline {subsection}{\numberline {6.2.2}Trusted Computing Base}{39}
\contentsline {subsection}{\numberline {6.2.3}Security Assumptions}{40}
\contentsline {subsection}{\numberline {6.2.4}Confidentiality of Bank System}{40}
\contentsline {section}{\numberline {6.3}Evaluation of Bank System Simulation}{43}
\contentsline {subsection}{\numberline {6.3.1}Examples of Malicious Programs}{43}
\contentsline {subsection}{\numberline {6.3.2}Evaluation of FlowHaskellRef}{44}
\contentsline {chapter}{\numberline {7}Extending FlowHaskellRef with Multithreaded Information Flow}{45}
\contentsline {section}{\numberline {7.1}Atomic Execution of Commands}{45}
\contentsline {section}{\numberline {7.2}The Run-time System}{46}
\contentsline {subsection}{\numberline {7.2.1}The Run-time Environment}{46}
\contentsline {subsection}{\numberline {7.2.2}ArrowRef}{47}
\contentsline {subsection}{\numberline {7.2.3}Semantics of ArrowRef Primitives}{47}
\contentsline {section}{\numberline {7.3}New Combinators for Multithreaded Programming}{49}
\contentsline {chapter}{\numberline {8}Case Study of Multithreaded FlowHaskellRef}{50}
\contentsline {section}{\numberline {8.1}Experimental Example}{50}
\contentsline {section}{\numberline {8.2}On-line Shopping Simulation}{52}
\contentsline {subsection}{\numberline {8.2.1}Simulation Program}{52}
\contentsline {subsection}{\numberline {8.2.2}Malicious Program}{53}
\contentsline {subsubsection}{Run-time system $\mathtt {R1}$}{53}
\contentsline {subsubsection}{Run-time system $\mathtt {R2}$}{54}
\contentsline {chapter}{\numberline {9}Discussions and Conclusions}{56}
\contentsline {section}{\numberline {9.1}Combinator $\mathtt {lowerA}$}{56}
\contentsline {section}{\numberline {9.2}Singleton Types}{57}
\contentsline {section}{\numberline {9.3}Closing Timing Channels via Cooperative Scheduler}{57}
\contentsline {section}{\numberline {9.4}Future Work}{58}
\contentsline {subsection}{\numberline {9.4.1}Decentralized Label Model}{58}
\contentsline {subsection}{\numberline {9.4.2}Arrow Syntax Transformation}{58}
\contentsline {subsection}{\numberline {9.4.3}Multiple Authorities in a Secure Program}{58}
\contentsline {section}{\numberline {9.5}Conclusion}{59}
\contentsline {chapter}{Appendix}{63}
\contentsline {section}{\numberline {A}Syntactic Sugars}{63}
\contentsline {section}{\numberline {B}Complete Haskell Code}{64}
\contentsline {subsection}{\numberline {B.1}Lattice.hs}{64}
\contentsline {subsection}{\numberline {B.2}RLattice.hs}{66}
\contentsline {subsection}{\numberline {B.3}RefOp.hs}{67}
\contentsline {subsection}{\numberline {B.4}SecureFlow.hs}{67}
\contentsline {subsection}{\numberline {B.5}Unification.hs}{69}
\contentsline {subsection}{\numberline {B.6}Priv.hs}{73}
\contentsline {subsection}{\numberline {B.7}FlowArrowRef.hs}{73}
\contentsline {subsection}{\numberline {B.8}BankLattice.hs}{87}
\contentsline {subsection}{\numberline {B.9}BankKey.hs}{89}
\contentsline {subsection}{\numberline {B.10}BankSystem.hs}{91}
\contentsline {subsection}{\numberline {B.11}BankTCB.hs}{97}
\contentsline {subsection}{\numberline {B.12}MultiExp.hs}{98}
\contentsline {subsection}{\numberline {B.13}Shopping.hs}{99}
